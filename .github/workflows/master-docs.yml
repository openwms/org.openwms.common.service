name: 'Build Documentation & QA'
on:
  workflow_run:
    workflows: ["master_build"]
    branches: [ master ]
    types:
      - completed

env:
  MAVEN_OPTS: -Dorg.slf4j.simpleLogger.log.org.apache.maven.cli.transfer.Slf4jMavenTransferListener=warn

jobs:
  build_site:
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    runs-on: ubuntu-latest
    name: Build Microservice Docs
    services:
      rabbitmq:
        image: rabbitmq:3.8
        env:
          RABBITMQ_DEFAULT_USER: guest
          RABBITMQ_DEFAULT_PASS: guest
        ports:
          - 5672:5672
      postgres:
        image: openwms/postgres-image:latest
        env:
          POSTGRES_PASSWORD: postgres
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
      - name: Set up JDK 21
        uses: actions/setup-java@v1
        with:
          java-version: 21
      - name: Cache SonarQube packages
        uses: actions/cache@v1
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
      - name: Cache Maven packages
        uses: actions/cache@v1
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2
      - name: Install tools
        run: |
          sudo apt-get update
          sudo apt-get install graphviz gsfonts graphviz-doc
          git config --global user.email "ci@example.com"
          git config --global user.name "CI Server"
      - uses: AdoptOpenJDK/install-jdk@v1
        with:
          version: '17'
          architecture: x64
      - name: Confluence Update
        run: |
          cd doc
          ./dtcw install doctoolchain
          ./dtcw generateHTML
          mkdir --parents ../target/site/microsite/; mv build/html5/* $_
      - uses: actions/setup-java@v1
        with:
          java-version: 21
      - name: Site
        run: >
          ./mvnw post-integration-test site scm-publish:publish-scm
          -DsurefireArgs=-Dspring.profiles.active=ASYNCHRONOUS,TEST,TESTPG
          -Dargs=-Dspring.profiles.active=ASYNCHRONOUS,TEST,TESTPG
          -Dspring.datasource.url=jdbc:postgresql://localhost:5432/testdb
          -Dspring.rabbitmq.host=localhost
          -Dscmuser=$PUSHKEY
          -Dscmpublish.pubScmUrl=scm:git:https://openwms:$PUSHKEY@github.com/openwms/org.openwms.common.service.git
          -DdeveloperConnectionUrl=scm:git:https://openwms:$PUSHKEY@github.com/openwms/org.openwms.common.service.git
          -Dci.buildNumber=$GITHUB_RUN_NUMBER
          -Prelease,coverage -B $MAVEN_OPTS
        env:
          PUSHKEY: ${{ secrets.PUSHKEY }}
